<?xml version="1.0" encoding="utf-8" ?>
<!-- This file contains job definitions in schema version 2.0 format -->

<job-scheduling-data xmlns="http://quartznet.sourceforge.net/JobSchedulingData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0">

  <processing-directives>
    <overwrite-existing-data>true</overwrite-existing-data>
  </processing-directives>

  <schedule>
    <!--一键报警 YJBJJob,YJBJJobGroup-->
    <job>
      <name>YJBJJob</name>
      <group>YJBJJobGroup</group>
      <description>一键报警</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.YJBJ.Job,COM.TIGER.TASK.DAT.Synchronization.YJBJ</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--暂住人口 ZZRKJob,PJJobGroup-->
    <job>
      <name>ZZRKJob</name>
      <group>PJJobGroup</group>
      <description>暂住人口</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.ZZRK.Job,COM.TIGER.TASK.DAT.Synchronization.ZZRK</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--境外人口 JWRKJob,PJJobGroup-->
    <job>
      <name>JWRKJob</name>
      <group>PJJobGroup</group>
      <description>境外人口</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.JWRK.Job,COM.TIGER.TASK.DAT.Synchronization.JWRK</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--实有人口 HJRKJob,PJJobGroup-->
    <job>
      <name>HJRKJob</name>
      <group>PJJobGroup</group>
      <description>户籍人口</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.HJRK.Job,COM.TIGER.TASK.DAT.Synchronization.HJRK</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--单位信息 DWJBXXJob,PJJobGroup-->
    <job>
      <name>DWJBXXJob</name>
      <group>PJJobGroup</group>
      <description>单位信息</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.DWJBXX.Job,COM.TIGER.TASK.DAT.Synchronization.DWJBXX</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--从业人员 DWCYRYJob,PJJobGroup-->
    <job>
      <name>DWCYRYJob</name>
      <group>PJJobGroup</group>
      <description>从业人员</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.DWCYRY.Job,COM.TIGER.TASK.DAT.Synchronization.DWCYRY</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--酒店，宾馆，旅店 HOTELJob,PJJobGroup-->
    <job>
      <name>HOTELJob</name>
      <group>PJJobGroup</group>
      <description>酒店，宾馆，旅店</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.HOTEL.Job,COM.TIGER.TASK.DAT.Synchronization.HOTEL</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--酒店，宾馆，旅店住宿人员 HOTELSTAYJob,PJJobGroup-->
    <job>
      <name>HOTELSTAYJob</name>
      <group>PJJobGroup</group>
      <description>酒店，宾馆，旅店住宿人员</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.HOTELSTAY.Job,COM.TIGER.TASK.DAT.Synchronization.HOTELSTAY</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--案事件 AJJBXXJob,AJJBXXJobGroup-->
    <job>
      <name>AJJBXXJob</name>
      <group>AJJBXXJobGroup</group>
      <description>案事件</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.AJJBXX.Job,COM.TIGER.TASK.DAT.Synchronization.AJJBXX</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--三台合一 JCJJJDBJob,JCJJJDBJobGroup-->
    <job>
      <name>JCJJJDBJob</name>
      <group>JCJJJDBJobGroup</group>
      <description>三台合一</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.JCJ_JJDB.Job,COM.TIGER.TASK.DAT.Synchronization.JCJ_JJDB</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <!--GPSJob,GpsJobGroup-->
    <job>
      <name>GPSJob</name>
      <group>GpsJobGroup</group>
      <description>GPS单兵作战</description>
      <job-type>COM.TIGER.TASK.DAT.Synchronization.GPSTask.Job,COM.TIGER.TASK.DAT.Synchronization.GPSTask</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>

    <!--触发器 每30秒执行一次任务，一键报警-->
    <!--<trigger>
      <cron>
        <name>JobTrigger1</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>YJBJJob</job-name>
        <job-group>YJBJJobGroup</job-group>
        <cron-expression>0/30 * * * * ?</cron-expression>
      </cron>
    </trigger>-->
    
    <!--触发器 每30秒执行一次任务，三台合一-->
    <!--<trigger>
      <cron>
        <name>JobTrigger2</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>JCJJJDBJob</job-name>
        <job-group>JCJJJDBJobGroup</job-group>
        <cron-expression>0/30 * * * * ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每天午夜11:30执行一次任务，暂住人口-->
    <!--<trigger>
      <cron>
        <name>JobTrigger3</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>ZZRKJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 30 22 * * ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每天午夜11:00执行一次任务，境外人口-->
    <!--<trigger>
      <cron>
        <name>JobTrigger4</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>JWRKJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 0 23 * * ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每天午夜11:15执行一次任务，实有人口-->
    <!--<trigger>
      <cron>
        <name>JobTrigger5</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>HJRKJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 15 23 * * ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每周五凌晨00:00执行一次任务，单位信息-->
    <!--<trigger>
      <cron>
        <name>JobTrigger6</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>DWJBXXJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 0 0 ? * 6</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每周二，四，六凌晨00:00执行一次任务，从业人员-->
    <!--<trigger>
      <cron>
        <name>JobTrigger7</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>DWCYRYJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 0 0 ? * 3,5,7</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每周五凌晨00:00执行一次任务，酒店，宾馆，旅店-->
    <!--<trigger>
      <cron>
        <name>JobTrigger8</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>HOTELJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 0 0 * * 6 ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每天晚上23:30执行一次任务，酒店，宾馆，旅店住宿人员-->
    <!--<trigger>
      <cron>
        <name>JobTrigger9</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>HOTELSTAYJob</job-name>
        <job-group>PJJobGroup</job-group>
        <cron-expression>0 30 23 * * ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每天凌晨01:00执行一次任务，案事件-->
    <!--<trigger>
      <cron>
        <name>JobTrigger10</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>AJJBXXJob</job-name>
        <job-group>AJJBXXJobGroup</job-group>
        <cron-expression>0 0 1 * * ?</cron-expression>
      </cron>
    </trigger>-->

    <!--触发器 每30秒执行一次任务，三台合一-->
    <trigger>
      <cron>
        <name>GpsJobTrigger</name>
        <group>SyncJobTriggerGroup</group>
        <job-name>GPSJob</job-name>
        <job-group>GpsJobGroup</job-group>
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <!--定时任务时间设置说明-->
    <!--    
    这些星号由左到右按顺序代表 ：     *    *     *     *    *     *   *
    格式： [秒] [分] [小时] [日] [月] [周] [年]
    
    序号 说明 是否必填  允许填写的值 允许的通配符
    1  秒  是  0-59    , - * /
    2  分  是  0-59 , - * /
    3 小时  是  0-23   , - * /
    4  日  是  1-31   , - * ? / L W
    5  月  是  1-12 or JAN-DEC   , - * /
    6  周  是  1-7 or SUN-SAT   , - * ? / L #
    7  年  否  empty 或 1970-2099  , - * /
    
    通配符说明:
    * 表示所有值. 例如:在分的字段上设置 "*",表示每一分钟都会触发。
    ? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为"?" 具体设置为 0 0 0 10 * ?
    - 表示区间。例如 在小时上设置 "10-12",表示 10,11,12点都会触发。
    , 表示指定多个值，例如在周字段上设置 "MON,WED,FRI" 表示周一，周三和周五触发
    / 用于递增触发。如在秒上面设置"5/15" 表示从5秒开始，每增15秒触发(5,20,35,50)。在月字段上设置'1/3'所示每月1号开始，每隔三天触发一次。
    L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 在周字段上表示星期六，相当于"7"或"SAT"。如果在"L"前加上数字，则表示该数据的最后一个。例如在周字段上设置"6L"这样的格式,则表示“本月最后一个星期五"
    W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置"15W"，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 "1W",它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，"W"前只能设置具体的数字,不允许区间"-").
    
    小提示:
    'L'和 'W'可以一组合使用。如果在日字段上设置"LW",则表示在本月的最后一个工作日触发(一般指发工资 )
    # 序号(表示每月的第几个周几)，例如在周字段上设置"6#3"表示在每月的第三个周六.注意如果指定"#5",正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了)
    
    小提示:
    周字段的设置，若使用英文字母是不区分大小写的 MON 与mon相同.
    
    常用示例:
    0 0 12 * * ? 每天12点触发
    0 15 10 ? * * 每天10点15分触发
    0 15 10 * * ? 每天10点15分触发
    0 15 10 * * ? * 每天10点15分触发
    0 15 10 * * ? 2005 2005年每天10点15分触发
    0 * 14 * * ? 每天下午的 2点到2点59分每分触发
    0 0/5 14 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发)
    0 0/5 14,18 * * ? 每天下午的 2点到2点59分(整点开始，每隔5分触发),每天下午的 18点到18点59分(整点开始，每隔5分触发)
    0 0-5 14 * * ? 每天下午的 2点到2点05分每分触发
    0 10,44 14 ? 3 WED     3月分每周三下午的 2点10分和2点44分触发 （特殊情况，在一个时间设置里，执行两次或两次以上的情况）
    0 59 2 ? * FRI    每周5凌晨2点59分触发；
    0 15 10 ? * MON-FRI 从周一到周五每天上午的10点15分触发
    0 15 10 15 * ? 每月15号上午10点15分触发
    0 15 10 L * ? 每月最后一天的10点15分触发
    0 15 10 ? * 6L 每月最后一周的星期五的10点15分触发
    0 15 10 ? * 6L 2002-2005 从2002年到2005年每月最后一周的星期五的10点15分触发
    0 15 10 ? * 6#3 每月的第三周的星期五开始触发
    0 0 12 1/5 * ? 每月的第一个中午开始每隔5天触发一次
    0 11 11 11 11 ? 每年的11月11号 11点11分触发(光棍节)
    -->
  </schedule>
</job-scheduling-data>